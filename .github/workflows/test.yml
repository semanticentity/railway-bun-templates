name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-templates:
    name: Test ${{ matrix.template }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        template:
          - bun-http-server
          - bun-rest-api
          - bun-postgresql
          - bun-react-vite
          - bun-websocket
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        working-directory: ./${{ matrix.template }}
        run: bun install
      
      - name: Type check
        working-directory: ./${{ matrix.template }}
        run: |
          if [ -f "tsconfig.json" ]; then
            bun run type-check || echo "No type-check script"
          fi
        continue-on-error: true
      
      - name: Build
        working-directory: ./${{ matrix.template }}
        run: |
          if grep -q '"build"' package.json; then
            bun run build
          else
            echo "No build script needed"
          fi
        continue-on-error: true
      
      - name: Lint check
        working-directory: ./${{ matrix.template }}
        run: |
          if grep -q '"lint"' package.json; then
            bun run lint
          else
            echo "No lint script"
          fi
        continue-on-error: true
      
      - name: Test template structure
        working-directory: ./${{ matrix.template }}
        run: |
          # Check essential files exist
          test -f package.json || exit 1
          test -f railway.json || exit 1
          test -f README.md || exit 1
          test -f .gitignore || exit 1
          test -d src || exit 1
          echo "✅ Template structure valid"
      
      - name: Validate package.json
        working-directory: ./${{ matrix.template }}
        run: |
          # Check required scripts
          jq -e '.scripts.start' package.json > /dev/null || exit 1
          jq -e '.scripts.dev' package.json > /dev/null || exit 1
          # Check for ES modules
          jq -e '.type == "module"' package.json > /dev/null || echo "⚠️ Not using ES modules"
          echo "✅ package.json valid"
      
      - name: Validate railway.json
        working-directory: ./${{ matrix.template }}
        run: |
          # Check RAILPACK builder
          jq -e '.build.builder == "RAILPACK"' railway.json > /dev/null || exit 1
          echo "✅ railway.json valid"
      
      - name: Check health endpoint exists
        working-directory: ./${{ matrix.template }}
        run: |
          # Check for health endpoint in source code
          grep -r "health" src/ || exit 1
          echo "✅ Health endpoint found"
      
      - name: Check environment variable usage
        working-directory: ./${{ matrix.template }}
        run: |
          # Check for env var usage
          grep -r "process\.env\|Bun\.env" src/ || exit 1
          echo "✅ Environment variables used"
  
  validate-docs:
    name: Validate Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check main README
        run: |
          test -f README.md || exit 1
          grep -q "Railway" README.md || exit 1
          grep -q "Bun" README.md || exit 1
          echo "✅ Main README valid"
      
      - name: Check template READMEs
        run: |
          for template in bun-http-server bun-rest-api bun-postgresql bun-react-vite bun-websocket; do
            test -f "$template/README.md" || exit 1
            grep -q "Deploy on Railway" "$template/README.md" || exit 1
            grep -q "Environment Variables" "$template/README.md" || exit 1
            echo "✅ $template README valid"
          done
      
      - name: Check for broken links
        run: |
          # Check for placeholder links
          ! grep -r "YOUR-CODE\|YOUR-USERNAME\|YOUR-REPO" */README.md || echo "⚠️ Found placeholder links"
  
  audit:
    name: Security & Quality Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Run quick audit script
        run: |
          chmod +x quick-audit.sh
          ./quick-audit.sh
        continue-on-error: true
  
  marketplace-readiness:
    name: Railway Marketplace Readiness
    runs-on: ubuntu-latest
    needs: [test-templates, validate-docs]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check marketplace criteria
        run: |
          echo "✅ All templates passed tests"
          echo "✅ Documentation validated"
          echo "🚀 Templates are marketplace ready!"
      
      - name: Generate summary
        run: |
          echo "## 🎉 Marketplace Readiness Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ All 5 templates passed validation" >> $GITHUB_STEP_SUMMARY
          echo "✅ Essential files present" >> $GITHUB_STEP_SUMMARY
          echo "✅ RAILPACK builder configured" >> $GITHUB_STEP_SUMMARY
          echo "✅ Health endpoints implemented" >> $GITHUB_STEP_SUMMARY
          echo "✅ Documentation complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **Ready for Railway marketplace submission!**" >> $GITHUB_STEP_SUMMARY
